<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.kurien.blog.module.post.mapper">
	<resultMap id="resultMap" type="net.kurien.blog.module.post.vo.Post">
		<id property="postNo" column="postNo" />
		<result property="postAuthor" column="postAuthor"/>
		<result property="postPassword" column="postPassword"/>
		<result property="postSubject" column="postSubject"/>
		<result property="postContent" column="postContent"/>
		<result property="postView" column="postView" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result property="postPublish" column="postPublish" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result property="postWriteTime" column="postWriteTime"/>
		<result property="postReservationTime" column="postReservationTime"/>
		<result property="postWriteIp" column="postWriteIp"/>
	</resultMap>
	
	<sql id="table">
		krePost
	</sql>
	
	<sql id="criteria">
		<if test="offset != null and rowCount != null">
			LIMIT #{offset}, #{rowCount}
		</if>
	</sql>
	
	<sql id="search">
		<if test="searchType != null and keyword != null">
			<choose>
				<when test="searchType eq 'subject'">
					postSubject like CONCAT('%', #{keyword}, '%') 
				</when>
				<when test="searchType eq 'author'">
					postAuthor like CONCAT('%', #{keyword}, '%') 
				</when>
			</choose>
		</if>
	</sql>
    
    <select id="selectList" resultMap="resultMap">
        SELECT *
        FROM <include refid="table" />
        <where>
        	<include refid="search" />
        </where>
       	ORDER BY
       		postNo DESC
       	<include refid="criteria" />
    </select>
    
    <select id="selectCount" resultType="Integer">
        SELECT count(*)
        FROM <include refid="table" />
        <where>
        	<include refid="search" />
        </where>
    </select>
    
    <select id="selectOne" resultMap="resultMap">
        SELECT *
        FROM <include refid="table" />
        <where>
        	postNo = #{postNo}
        </where>
    </select>
		
    <insert id="insert" useGeneratedKeys="true" keyProperty="postNo">
        INSERT INTO
        <include refid="table" /> (
        	postNo,
        	postAuthor,
        	postPassword,
        	postSubject,
        	postContent,
        	<if test="postView != null">postView,</if>
        	<if test="postPublish != null">postPublish,</if>
        	postWriteTime,
        	postReservationTime,
        	postWriteIp
        )
        VALUES (
        	#{postNo},
        	#{postAuthor},
			#{postPassword},
			#{postSubject},
			#{postContent},
        	<if test="postView != null">#{postView.value},</if>
        	<if test="postPublish != null">#{postPublish.value},</if>
			#{postWriteTime},
			#{postReservationTime},
			#{postWriteIp}
		)
    </insert>
    
    <update id="update">
        UPDATE <include refid="table" />
        <set>
        	<if test="postPassword != null">
        		<choose>
        			<when test="postPassword eq ''">
        				postPassword = null,
        			</when>
        			<otherwise>
        				postPassword = #{postPassword},
        			</otherwise>
        		</choose>
        	</if>
        	<if test="postSubject != null">
	        	postSubject = #{postSubject},
        	</if>
        	<if test="postContent != null">
	        	postContent = #{postContent},
        	</if>
        	<if test="postView != null">
	        	postView = #{postView.value},
        	</if>
        	<if test="postPublish != null">
	        	postPublish = #{postPublish.value},
        	</if>
        	<if test="postReservationTime != null">
	       		<choose>
	       			<when test="postReservationTime.time == 0">
	       				postReservationTime = null,
	       			</when>
	       			<otherwise>
	       				postReservationTime = #{postReservationTime},
	       			</otherwise>
	       		</choose>
        	</if>
        	<if test="postWriteIp != null">
	        	postWriteIp = #{postWriteIp},
        	</if>
       	</set>
       	
       	<where>
       		postNo = #{postNo}
       	</where>
    </update>
    
    <delete id="delete">
        DELETE FROM <include refid="table" />
        <where>
        	postNo = #{postNo}
        </where>
    </delete>
    
    <delete id="deleteList" parameterType="list">
        DELETE FROM <include refid="table" />
        <where>
        	postNo IN
        	<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
        		#{item.value}
        	</foreach>
        </where>
    </delete>
    
    <delete id="deleteAll">
        TRUNCATE <include refid="table" />
    </delete>
    
    <select id="isExist" resultType="Integer">
        SELECT count(*)
        FROM <include refid="table" />
        <where>
        	postNo = #{postNo}
        </where>
    </select>
</mapper>
