<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
	
	<http pattern="/css/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/font/**" security="none" />
	
	<http auto-config="true" use-expressions="true">
		<form-login 
			username-parameter="acntId"
			password-parameter="acntPassword"
			login-page="/auth/signin"
			login-processing-url="/auth/signinCheck"
			default-target-url="/"
			authentication-failure-url="/auth/signin?fail=true"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler"
		/>

		<anonymous granted-authority="ROLE_ANONYMOUS" />
		
        <logout
			logout-url="/auth/signout"
        	logout-success-url="/"
			delete-cookies="JSESSIONID"
			invalidate-session="true"
		/>
		
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor" />
		
<!-- 		<access-denied-handler error-page="/error/access_denied"/> -->
	</http>

	<authentication-manager>
        <authentication-provider user-service-ref="customJdbcDaoImpl">
        	<password-encoder ref="passwordEncoder" />
        </authentication-provider>
	</authentication-manager>
	
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource" />
	</beans:bean>
	
	<beans:bean id="customJdbcDaoImpl" class="net.kurien.blog.common.aop.security.dao.CustomJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="rolePrefix" value="ROLE_" />
		<beans:property name="usersByUsernameQuery" value="SELECT id, password, name FROM memberinfo WHERE id=?" />
		<beans:property name="authoritiesByUsernameQuery" value="SELECT role_id FROM member_role WHERE id=?" />
		<beans:property name="enableGroups" value="false" />
	</beans:bean>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg value="12" />
	</beans:bean>
	
	<beans:bean id="customAuthenticationSuccessHandler" class="net.kurien.blog.common.aop.security.handler.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect" />
		<beans:property name="useReferer" value="false" />
		<beans:property name="defaultUrl" value="/" />
	</beans:bean>
	
	<beans:bean id="customAuthenticationFailureHandler" class="net.kurien.blog.common.aop.security.handler.CustomAuthenticationFailureHandler">
		<beans:property name="acntIdName" value="acntId" />
		<beans:property name="acntPasswordName" value="acntPassword" />
		<beans:property name="acntRedirectName" value="acntRedirect" />
		<beans:property name="exceptionMsgName" value="securityexceptionmsg" />
		<beans:property name="defaultFailureUrl" value="/auth/signin?fail=true" />
	</beans:bean>

	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter">
					<beans:property name="rolePrefix" value="" />
				</beans:bean>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="allowIfAllAbstainDecisions" value="false" />
	</beans:bean>
	
	<beans:bean id="reloadableFilterInvocationSecurityMetadataSource" class="net.kurien.blog.common.aop.security.ReloadableFilterInvocationSecurityMetadataSource">
		<beans:constructor-arg ref="requestMap" />
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>
	
	<beans:bean id="securedObjectService" class="net.kurien.blog.common.aop.security.service.impl.SecuredObjectServiceImpl">
		<beans:property name="secureObjectDao" ref="securedObjectDao" />
	</beans:bean>
	
	<beans:bean id="securedObjectDao" class="net.kurien.blog.common.aop.security.dao.SecuredObjectDao">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="sqlRolesAndUrl" value="SELECT A.RESOURCE_PATTERN AS URL, B.AUTHORITY AS AUTHORITY FROM SECURED_RESOURCE A, SECURED_RESOURCE_AUTHORITY B WHERE A.RESOURCE_ID = B.RESOURCE_ID AND A.RESOURCE_TYPE = 'url' ORDER BY A.SORT_ORDER" />
	</beans:bean>
	
	<beans:bean id="requestMap" class="net.kurien.blog.common.aop.security.UrlResourcesMapFactoryBean" init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>
</beans:beans>